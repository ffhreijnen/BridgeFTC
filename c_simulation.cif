import "d_visualization.cif";

automaton def button_plant():
    uncontrollable u_pushed, u_released;
    location released:
        initial;
        edge u_pushed   goto pushed;
    location pushed:
        edge u_released goto released;
end

group LTS:
    button_on : button_plant();
    group stopsigns:
        stop1 : Sign(FTC.D.s1_f); stop2 : Sign(FTC.D.s2_f); stop3 : Sign(FTC.D.s3_f); stop4 : Sign(FTC.D.s4_f);
        stop5 : Sign(FTC.D.s5_f); stop6 : Sign(FTC.D.s6_f); stop7 : Sign(FTC.D.s7_f); stop8 : Sign(FTC.D.s8_f);
    end
    group presigns:
        ps1 : Sign(FTC.D.ps1_f); ps2 : Sign(FTC.D.ps2_f); ps3 : Sign(FTC.D.ps3_f);
        ps4 : Sign(FTC.D.ps4_f); ps5 : Sign(FTC.D.ps5_f); ps6 : Sign(FTC.D.ps6_f);
    end

    group def Sign(alg bool fault):
        uncontrollable u_on, u_off;
        controllable c_on, c_off;
        automaton A:
            disc bool o = false;
            location off:
                initial;
                edge c_on  do o := true  goto on;
                edge u_off;
            location on:
                edge c_off do o := false goto off;
                edge u_on  when not fault;
                edge u_off when fault;
        end
        automaton S:
            disc bool o = false;
            location off:
                initial;
                edge u_on  do o := true goto on;
            location on:
                edge u_off do o := false goto off;
        end
    end
end
group barriers:
    barrier1 : barrier(FTC.D.bar1_f);
    barrier2 : barrier(FTC.D.bar2_f);
    barrier3 : barrier(FTC.D.bar3_f);
    barrier4 : barrier(FTC.D.bar4_f);
    barrier5 : barrier(FTC.D.bar5_f);
    barrier6 : barrier(FTC.D.bar6_f);

    button_close_entering : button_plant();
    button_stop_entering  : button_plant();
    button_open_entering  : button_plant();

    button_close_leaving  : button_plant();
    button_stop_leaving   : button_plant();
    button_open_leaving   : button_plant();

    button_close_slow     : button_plant();
    button_stop_slow      : button_plant();
    button_open_slow      : button_plant();

    group def barrier(alg bool fault):
        uncontrollable u_closed_on, u_closed_off, u_open_on, u_open_off;
        controllable c_open , c_close, c_stop;
        automaton A:
            disc bool o = false, c = false;
            cont t = 0 der if opening or closing: 1 else 0 end;
            location stopped:
                initial;
                edge c_open  do o := true,  c := false goto opening;
                edge c_close do o := false, c := true  goto closing;
            location opening:
                edge c_stop       do o := true,  c := false, t := 0 goto stopped;
                edge u_open_on    when t >= 2.0 and not fault;
                edge u_closed_off when not fault;
            location closing:
                edge c_stop       do o := false, c := false, t := 0  goto stopped;
                edge u_closed_on  when t >= 2.0;// and not fault;
                edge u_open_off;
        end
        automaton S:
            disc bool c = false, o = true;
            location open:
                initial;
                edge u_open_off   do c:= false,  o := false goto between;
            location between:
                edge u_open_on    do c := false, o := true  goto open;
                edge u_closed_on  do c := true,  o := false goto closed;
            location closed:
                edge u_closed_off do c:= false,  o := false goto between;
        end
    end
end

group shipping_signs:
    upstream : head();
    downstream : head();

    group def head():
        button_red      : button_plant();
        button_redgreen : button_plant();
        button_green    : button_plant();
        button_redred   : button_plant();

        N : shipping_sign();
        S : shipping_sign();

        group def shipping_sign():
            uncontrollable u_red_on, u_red_off, u_green_on, u_green_off, u_red2_off, u_red2_on;
            controllable c_red, c_green, c_redgreen, c_redred;
            automaton A:
                disc bool r = true, g = false, s = false;
                location red:
                    initial;
                    edge c_redgreen do r := true , g := false, s := false goto redgreen;
                    edge c_redred   do r := true,  g := false, s := true  goto redred;
                    edge u_red_on, u_green_off, u_red2_off;
                location green:
                    edge c_red      do r := true,  g := false, s := false goto red;
                    edge u_red_off, u_green_on, u_red2_off;
                location redgreen:
                    edge c_red      do r := true,  g := false, s := false goto red;
                    edge c_green    do r := false, g := true,  s := false goto green;
                    edge u_red_on, u_green_on, u_red2_off;
                location redred:
                    edge c_red      do r := true,  g := false, s := false goto red;
                    edge u_red_on, u_green_off, u_red2_on;
            end
            automaton def S(uncontrollable u_on, u_off; alg bool init_on):
                disc bool o = init_on;
                location off:
                    initial not init_on;
                    edge u_on  do o := true  goto on;
                location on:
                    initial init_on;
                    edge u_off do o := false goto off;
            end
            S_R : S(u_red_on,   u_red_off,   true);
            S_G : S(u_green_on, u_green_off, false);
            S_S : S(u_red2_on,  u_red2_off,  false);
        end
    end
end

group bridgedeck:
    button_open  : button_plant();
    button_stop  : button_plant();
    button_close : button_plant();

    alg bool fault = FTC.D.bridge_f;

    uncontrollable u_open_on, u_open_off, u_closed_on, u_closed_off;
    controllable   c_open , c_close, c_stop;

    automaton A:
        disc bool o = false, c = false;
        location rest:
            initial;
            edge c_open  do o := true,  c := false goto opening;
            edge c_close do o := false, c := true  goto closing;
            edge u_closed_off when fault;
        location opening:
            edge c_stop       do o := false, c := false goto rest;
            edge u_open_on,  u_closed_off;
        location closing:
            edge c_stop       do o := false, c := false goto rest;
            edge u_open_off, u_closed_on;
    end
    automaton position:
        disc bool o = false, c = true;
        location closed:
            initial;
            edge u_closed_off do o := false, c := false goto between;
        location between:
            edge u_open_on    do o := true,  c := false goto up;
            edge u_closed_on  do o := false, c := true  goto closed;
        location up:
            edge u_open_off   do o := false, c := false goto between;
    end
end

group FTC:
    automaton D:
        uncontrollable f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f25;
        uncontrollable r15, r16, r17, r18, r19, r20;
        disc bool ps1_f = false, ps2_f = false, ps3_f = false,
                  ps4_f = false, ps5_f = false, ps6_f = false,
                  s1_f = false, s2_f = false, s3_f = false, s4_f = false,
                  s5_f = false, s6_f = false, s7_f = false, s8_f = false,
                  bar1_f = false, bar4_f = false, bar3_f = false, bar2_f = false,
                  bar5_f = false, bar6_f = false,
                  bridge_f = true;
        location a: initial;
            edge f1 do ps1_f := true;
            edge f2 do ps2_f := true;
            edge f3 do ps3_f := true;
            edge f4 do ps4_f := true;
            edge f5 do ps5_f := true;
            edge f6 do ps6_f := true;
            edge f7 do s1_f  := true;
            edge f8 do s2_f  := true;
            edge f9 do s3_f  := true;
            edge f10 do s4_f := true;
            edge f11 do s5_f := true;
            edge f12 do s6_f := true;
            edge f13 do s7_f := true;
            edge f14 do s8_f := true;
            edge f15 do bar1_f := true;
            edge r15 do bar1_f := false;
            edge f16 do bar4_f := true;
            edge r16 do bar4_f := false;
            edge f17 do bar3_f := true;
            edge r17 do bar3_f := false;
            edge f18 do bar2_f := true;
            edge r18 do bar2_f := false;
            edge f19 do bar5_f := true;
            edge r19 do bar5_f := false;
            edge f20 do bar6_f := true;
            edge r20 do bar6_f := false;
            edge f25 do bridge_f := true;
            svgin id "ps1" event f1;
            svgin id "ps2" event f2;
            svgin id "ps3" event f3;
            svgin id "ps4" event f4;
            svgin id "ps5" event f5;
            svgin id "ps6" event f6;
            svgin id "fs1" event f7;
            svgin id "fs2" event f8;
            svgin id "fs3" event f9;
            svgin id "fs4" event f10;
            svgin id "fs5" event f11;
            svgin id "fs6" event f12;
            svgin id "fs7" event f13;
            svgin id "fs8" event f14;
            svgin id "sc1" event if not bar1_f: f15 else r15 end;
            svgin id "sc5" event if not bar5_f: f19 else r19 end;
            svgin id "sc3" event if not bar3_f: f17 else r17 end;
            svgin id "sc2" event if not bar2_f: f18 else r18 end;
            svgin id "sc4" event if not bar4_f: f16 else r16 end;
            svgin id "sc6" event if not bar6_f: f20 else r20 end;
            svgin id "bridgedeck_bike" event f25;
    end
end
